COMP	106
Final	Project
Design	Document
Connor Robinson, Eli Robinson
1.0	 OVERVIEW
For our project, we are creating an implementation for dance dance revolution, the classic arcade game.
This game has arrows falling down from the top of the screen. When these arrows enter a specific zone on
the bottom of the canvas, there is a prompt to click the key corresponding to the arrow. The goal of the
game is to hit all of the arrows as they fall from the top of the screen. The game also has multiple hitboxes
where the arrow is supposed to be hit, depending on how accurate the users input is. The game will display
good, great, or excellent, depending on how accurate the users input is. The game will also display the percent of
keys that have been hit. I miss counts as an arrow that goes through the users hitbox without being hit, or a user input
that does not hit an arrow. We may also add some easter eggs to this project that we will not tell the professor about,
as to suprise him, depending on time.

2.0	 SKETCH
The sketch is included in the github file, or is attached to the submission
3.0	 COMPONENTS
Walls – the	walls	are	the	4	sides	of	the	canvas.
canvasWidth
canvasHeight
canvasColor
Left Arrow: an arrow that moves down the screen, once it is in its hitbox, it can be interacted with by using keyboard
inputs.

Left Arrow:
x
y (constant)
color (constant)
speed (constant)
next x
next	y
drawLArrow()
- creates an arrow at the top of the screen in the correct position

Right Arrow:
x
y (constant)
color (constant)
speed (constant)
next x
next	y
drawRArrow()
- creates an arrow at the top of the screen in the correct position

Up Arrow:
x
y (constant)
color (constant)
speed (constant)
next x
next	y
drawUArrow()
- creates an arrow at the top of the screen in the correct position

Down Arrow:
x
y (constant)
color (constant)
speed (constant)
next x
next	y
drawDArrow()
- creates an arrow at the top of the screen in the correct position
Hitbox - an empty rectangle at the bottom of the screen that is the width of the screen. If the keyboard inputs are
pressed and the corresponding arrow is in the hitbox, it deletes the arrow and increases the count of hit arrows
There may be multiple hitboxes of nested sizes to account for different accuracies.
Hitbox:
y	=	constant	value
height = constant
createHitbox()
- draw a	rectangle	using y value, height

HitMessage	– the	message	that displays when a key is hit (good, great, excellent)
drawHitMessage()
- write	a	message	on	the	canvas when piece is hit

4.0	 INTERACTIONS
Arrow movement - The arrows fall down the screen on their paths at a set constant speed.
moveArrow()
- Moves the arrows downs the screen towords where the player can interact with them.
o set	gameON	=	FALSE
Interaction boxes - multiple locations on the bottom of the scree so that the player can press a key to hit the arrows as they fall. Each key defined in
a seperate row and multiple layers of smaller boxes in order to hit different levels of scoring (good, great, excellent)

KeyEvent()
-Checks location of pressed key  - key corresponds to different columns and when pressed checks the target locations in those columns.
-if arrow falls in the target locations then grants a score corresponding with how close made it(good, great, excellent)

5.0	 GAME CONTROL ALGORITHM
drawCanvas()
1.		clear	the	canvas
2.		draw	stuff
draw	arrows
draw	background
draw	words to screen if necessary
3.		move	stuff
move	the arrows
4.		check	for	collisions
when key is pressed, check corresponding hitbox to see if arrows are present and display correct information
check	for	collision	between	ball	and	bricks
gameLoop()
request	animation	frame
if	( gameOver ==	true )
drawGameOver()
else
drawCanvas()
6.0	 BUILD	STEPS
Will	build	things in	this	order:
Rows
-four collision detection rows with multiple boxes to effect how the collision occurs.
Arrows-
Create arrows that fall from the top of the screen. Their direction signifies the position of which column they will be put into.
arrows dissapear when they fall off the the screen
when the coreect key is pressed and the arrow lies in the collision box at the bottom of the screen the arrow will become larger then dissapepar
game over screen -
before game starts game over screen and click to play. Could also show high scores
click to set game over to flase and start canvas
collision-
Checks to see if arrows are inside a box when the buttons are pressed. clears them out if so. otherwise they fall to the bottom
After a certain amount of misses in a row the game will end and the game over screen will appear
canvas- loops through dropping the arrows and redrawing.